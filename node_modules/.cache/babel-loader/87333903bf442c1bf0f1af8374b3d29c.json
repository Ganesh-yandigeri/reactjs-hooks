{"ast":null,"code":"import React from 'react';\n\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case 'add':\n      return [...state, {\n        id: Date.now(),\n        text: '',\n        completed: false\n      }];\n\n    case 'delete':\n      return state.filter(item => item.id !== action.payload);\n\n    case 'completed':\n      return state.map(item => {\n        if (item.id === action.payload) {\n          return { ...item,\n            completed: !item.completed\n          };\n        }\n\n        return item;\n      });\n\n    case 'reset':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;","map":{"version":3,"sources":["/home/ganesh/Documents/reactGapp/awsapp/src/appReducer.js"],"names":["React","appReducer","state","action","type","id","Date","now","text","completed","filter","item","payload","map"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAkB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAO,CACH,GAAGF,KADA,EAEH;AACIG,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADR;AAEIC,QAAAA,IAAI,EAAE,EAFV;AAGIC,QAAAA,SAAS,EAAE;AAHf,OAFG,CAAP;;AASJ,SAAK,QAAL;AACI,aAAOP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYF,MAAM,CAACS,OAAxC,CAAP;;AAEJ,SAAK,WAAL;AACI,aAAOV,KAAK,CAACW,GAAN,CAAUF,IAAI,IAAI;AACrB,YAAGA,IAAI,CAACN,EAAL,KAAYF,MAAM,CAACS,OAAtB,EAA8B;AAC1B,iBAAM,EACF,GAAGD,IADD;AAEFF,YAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAFf,WAAN;AAIH;;AACD,eAAOE,IAAP;AACH,OARM,CAAP;;AASJ,SAAK,OAAL;AACI,aAAOR,MAAM,CAACS,OAAd;;AAEJ;AACI,aAAOV,KAAP;AA5BR;AA8BH,CA/BD;;AAkCA,eAAeD,UAAf","sourcesContent":["import React from 'react'\n\nconst appReducer = (state, action) =>{\n    switch (action.type){\n        case 'add':\n            return [\n                ...state,\n                {\n                    id: Date.now(),\n                    text: '',\n                    completed: false\n                }\n            ]\n        \n        case 'delete':\n            return state.filter(item => item.id !== action.payload)\n        \n        case 'completed':\n            return state.map(item => {\n                if(item.id === action.payload){\n                    return{\n                        ...item,\n                        completed: !item.completed\n                    }\n                }\n                return item\n            })\n        case 'reset':\n            return action.payload\n\n        default:\n            return state;\n    }\n}\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}